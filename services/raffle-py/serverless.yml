service: raffle-py

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true

provider:
  name: aws
  runtime: python3.6
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: { "Fn::GetAtt": ["RafflesDynamoDBTable", "Arn" ] }
    
  environment:
    RAFFLE_TABLE: { "Ref": "RafflesDynamoDBTable" }

functions:
  create:
    handler: handlers/create.handler
    events:
      - http:
          path: /create
          method: post
          cors: true
  list:
    handler: handlers/list.handler
    events:
      - http:
          path: /
          method: get
          cors: true
  show:
    handler: handlers/show.handler
    events:
      - http:
          path: /{shortcode}
          method: get
          request:
            parameters:
              paths:
                shortcode: true          
          cors: true
  start:
    handler: admin.start
    events:
      - http:
          path: /{shortcode}/start
          method: post
          request:
            parameters:
              paths:
                shortcode: true          
          cors: true

# public APIs
  register:
    handler: handler.register
    events:
      - http:
          path: /{shortcode}/register
          method: post
          request:
            parameters:
              paths:
                shortcode: true          
          cors: true

resources:
  Resources:
    RafflesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: shortcode
            AttributeType: S
        KeySchema:
          -
            AttributeName: shortcode
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
